<?php
/**
 * @file
 * Main logic file for the module
 */

/**
 * Implements hook_menu()
 */
function twc_block_demo_menu() {
  $items['settings/welcome'] = array(
    'title' => t('Welcome Message Settings'),
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('twc_block_demo_form'),
    'file' => 'twc_block_demo.form.inc',
    'access arguments' => array("access content"),
  );

  return $items;
}

/**
 * Implement hook_block_info()
 */
function twc_block_demo_block_info() {
  $blocks['user_last_login'] = array(
    'info' => t("User last login"),
    'cache' => DRUPAL_CACHE_PER_ROLE,
    'region' => 'sidebar_first',
  );

  return $blocks;
}

/**
 * Implements hook_block_view()
 */
function twc_block_demo_block_view($delta = '') {
  $block = array();

  switch($delta) {
    case "user_last_login":
      $block['subject'] = t("Welcome");
      $block['content'] = twc_block_demo_output();
      break;
  }

  return $block;
}

/**
 * Implements hook_ctools_plugin_directory()
 */
function twc_block_demo_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/ctype';
  }
}

/**
 * This is the actual display logic for the block in question. It will return
 * the markup for the block from a theme() call, or it will return nothing if the
 * associated user is a "anonymous user".
 */
function twc_block_demo_output() {
  global $user;

  // If the User has the role of "Authenticated User", run the time gathering
  // logic. Otherwise, exit and return null item.
  if(in_array("authenticated user", $user->roles) ) {
    return twc_block_demo_return_last_login_time($user);
  } else {
    return null;
  }
}

/**
 * Returns the last time the user logged in. To get this time, we look up
 * the "login" value for that user in the globalized $user object, and convert it
 * from a timestamp value to a human readable value (fuzzy)
 */
function twc_block_demo_return_last_login_time($user) {
  // Look up the database to see if a user has a custom message and use it
  // else, fall back and use the default
  $result = twc_block_demo_get_custom_welcome_message($user->uid);

  if(sizeof($result) > 0 && $result != "") {
    $message = $result . " " . twc_block_demo_format_time($user->login);
  } else {
    $message = "You last logged in at " . twc_block_demo_format_time($user->login);
  }

  return $message;
}

/**
 * TODO documentation
 * @param  [type] $user_id [description]
 * @return [type]          [description]
 */
function twc_block_demo_get_custom_welcome_message($user_id) {
  $results = db_query("SELECT message FROM {login_messages} WHERE user_id = :n_user_id", array(":n_user_id" => $user_id));

  foreach ($results as $result) {
    $message = $result->message;
  }

  if(isset($message)) {
    return $message;
  } else {
    return null;
  }
}

/**
 * TODO Documentation
 * @param  [type] $user_login_time [description]
 * @return [type]                  [description]
 */
function twc_block_demo_format_time($user_login_time) {
  global $user;
  // Return a human readable date when the user logged in
  return format_date($user_login_time, "custom", "g:i a", $user->timezone) .
    " on " . format_date($user_login_time, "custom", "F j Y", $user->timezone) . "<br />" .
    l('Edit this text', 'settings/welcome');
}
